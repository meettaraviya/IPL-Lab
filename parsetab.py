
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'BB08CDCAD1953272947DD26D888F77B4'
    
_lr_action_items = {'RETURN':([20,41,44,46,47,55,58,60,62,64,65,78,88,106,107,108,126,130,133,143,144,],[-36,-71,-71,-22,50,-21,-24,-23,-27,-33,-26,-25,-34,-32,-29,-28,-46,-45,-35,-31,-30,]),'LTE':([68,70,71,72,74,82,83,84,95,96,99,102,110,111,112,113,114,116,127,],[-69,-70,-53,-68,-43,-41,-42,-56,-52,-44,125,-55,-49,-51,-50,-47,-48,125,-54,]),'DATA_TYPE':([0,1,6,7,18,20,23,32,41,42,44,45,46,47,55,58,60,62,64,65,66,67,78,87,88,106,107,108,109,117,126,129,130,131,133,143,144,],[3,-5,-4,3,26,-36,26,38,-71,-8,-71,-9,-22,51,-21,-24,-23,-27,-33,-26,-7,-6,-25,51,-34,-32,-29,-28,-71,51,-46,51,-45,51,-35,-31,-30,]),'VOID':([0,1,6,7,20,42,45,66,67,],[4,-5,-4,4,-36,-8,-9,-7,-6,]),'FSLASH':([68,70,71,72,74,75,82,83,84,89,95,96,99,100,102,103,105,110,111,112,113,114,116,127,136,137,138,139,140,141,142,],[-69,-70,-53,-68,-43,91,-41,-42,-56,91,-52,-44,91,91,-55,91,91,-49,-51,-50,91,91,91,-54,91,91,91,91,91,91,91,]),'WHILE':([20,41,44,46,47,55,58,60,62,64,65,78,87,88,106,107,108,109,117,126,129,130,131,133,143,144,],[-36,-71,-71,-22,53,-21,-24,-23,-27,-33,-26,-25,53,-34,-32,-29,-28,-71,53,-46,53,-45,53,-35,-31,-30,]),'CONSTANT':([50,73,76,79,80,81,85,86,91,92,93,94,97,120,121,122,123,124,125,128,134,135,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'MINUS':([50,68,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,89,91,92,93,94,95,96,97,99,100,102,103,105,110,111,112,113,114,116,120,121,122,123,124,125,127,128,134,135,136,137,138,139,140,141,142,],[76,-69,-70,-53,-68,76,-43,94,76,76,76,76,-41,-42,-56,76,76,94,76,76,76,76,-52,-44,76,94,94,-55,94,94,-49,-51,-50,-47,-48,94,76,76,76,76,76,76,-54,76,76,76,94,94,94,94,94,94,94,]),'RBRACE':([20,41,44,46,47,48,49,54,55,57,58,60,62,64,65,69,78,88,90,106,107,108,109,126,130,131,133,143,144,],[-36,-71,-71,-22,-71,66,67,-15,-21,-18,-24,-23,-27,-33,-26,-17,-25,-34,-16,-32,-29,-28,-71,-46,-45,144,-35,-31,-30,]),'RPAREN':([18,21,23,24,25,28,30,33,43,68,70,71,72,74,81,82,83,84,89,95,96,98,101,102,103,104,110,111,112,113,114,115,116,127,132,136,137,138,139,140,141,142,145,146,],[-71,-40,-71,31,-14,-39,34,-12,-13,-69,-70,-53,-68,-43,102,-41,-42,-56,110,-52,-44,117,127,-55,-58,129,-49,-51,-50,-47,-48,132,110,-54,-67,-62,-64,-59,-60,-61,-63,-57,-66,-65,]),'SEMICOLON':([10,12,13,21,28,29,31,34,36,37,40,50,52,68,70,71,72,74,75,82,83,84,87,95,96,100,102,105,110,111,112,113,114,117,127,129,],[20,-37,-39,-40,-39,-38,-71,-71,-20,42,45,69,78,-69,-70,-53,-68,-43,90,-41,-42,-56,107,-52,-44,126,-55,130,-49,-51,-50,-47,-48,107,-54,107,]),'NE':([68,70,71,72,74,82,83,84,95,96,99,102,110,111,112,113,114,116,127,],[-69,-70,-53,-68,-43,-41,-42,-56,-52,-44,123,-55,-49,-51,-50,-47,-48,123,-54,]),'PIPE':([68,70,71,72,74,82,83,84,95,96,98,102,104,110,111,112,113,114,115,118,127,132,136,137,138,139,140,141,145,146,],[-69,-70,-53,-68,-43,-41,-42,-56,-52,-44,118,-55,118,-49,-51,-50,-47,-48,118,134,-54,-67,-62,-64,-59,-60,-61,-63,-66,-65,]),'LT':([68,70,71,72,74,82,83,84,95,96,99,102,110,111,112,113,114,116,127,],[-69,-70,-53,-68,-43,-41,-42,-56,-52,-44,124,-55,-49,-51,-50,-47,-48,124,-54,]),'COMMA':([10,12,13,18,21,23,24,25,28,29,30,33,43,68,70,71,72,74,82,83,84,95,96,101,102,103,110,111,112,113,114,127,142,],[19,-37,-39,-71,-40,-71,32,-14,-39,-38,32,-12,-13,-69,-70,-53,-68,-43,-41,-42,-56,-52,-44,128,-55,-58,-49,-51,-50,-47,-48,-54,-57,]),'PLUS':([68,70,71,72,74,75,82,83,84,89,95,96,99,100,102,103,105,110,111,112,113,114,116,127,136,137,138,139,140,141,142,],[-69,-70,-53,-68,-43,93,-41,-42,-56,93,-52,-44,93,93,-55,93,93,-49,-51,-50,-47,-48,93,-54,93,93,93,93,93,93,93,]),'IDENTIFIER':([3,4,11,15,19,20,26,27,38,41,44,46,47,50,51,55,58,59,60,62,64,65,73,76,77,78,79,80,81,85,86,87,88,91,92,93,94,97,106,107,108,109,117,120,121,122,123,124,125,126,128,129,130,131,133,134,135,143,144,],[13,16,13,16,28,-36,28,28,28,-71,-71,-22,56,74,28,-21,-24,74,-23,-27,-33,-26,74,74,96,-25,74,74,74,74,74,56,-34,74,74,74,74,74,-32,-29,-28,-71,56,74,74,74,74,74,74,-46,74,56,-45,56,-35,74,74,-31,-30,]),'$end':([0,1,2,5,6,7,8,17,20,42,45,66,67,],[-71,-5,-1,0,-4,-71,-2,-3,-36,-8,-9,-7,-6,]),'GT':([68,70,71,72,74,82,83,84,95,96,99,102,110,111,112,113,114,116,127,],[-69,-70,-53,-68,-43,-41,-42,-56,-52,-44,120,-55,-49,-51,-50,-47,-48,120,-54,]),'GTE':([68,70,71,72,74,82,83,84,95,96,99,102,110,111,112,113,114,116,127,],[-69,-70,-53,-68,-43,-41,-42,-56,-52,-44,121,-55,-49,-51,-50,-47,-48,121,-54,]),'EE':([68,70,71,72,74,82,83,84,95,96,99,102,110,111,112,113,114,116,127,],[-69,-70,-53,-68,-43,-41,-42,-56,-52,-44,122,-55,-49,-51,-50,-47,-48,122,-54,]),'ASTERISK':([3,4,11,15,19,20,26,27,38,41,44,46,47,50,51,55,58,59,60,62,64,65,68,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,99,100,102,103,105,106,107,108,109,110,111,112,113,114,116,117,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,],[11,15,11,15,27,-36,27,27,27,-71,-71,-22,59,59,27,-21,-24,59,-23,-27,-33,-26,-69,-70,-53,-68,59,-43,92,59,-25,59,59,59,-41,-42,-56,59,59,59,-34,92,59,59,59,59,-52,-44,59,92,92,-55,92,92,-32,-29,-28,-71,-49,-51,-50,92,92,92,59,59,59,59,59,59,59,-46,-54,59,59,-45,59,-35,59,59,92,92,92,92,92,92,92,-31,-30,]),'EQUALS':([56,63,74,82,83,96,],[80,86,-43,-41,-42,-44,]),'ELSE':([20,58,60,62,64,65,78,88,106,107,108,126,130,133,143,144,],[-36,-24,-23,-27,87,-26,-25,-34,-32,-29,-28,-46,-45,-35,-31,-30,]),'AMPERSAND':([50,59,68,70,71,72,73,74,76,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,102,104,110,111,112,113,114,115,119,120,121,122,123,124,125,127,128,132,134,135,136,137,138,139,140,141,145,146,],[77,77,-69,-70,-53,-68,77,-43,77,77,77,77,-41,-42,-56,77,77,77,77,77,77,-52,-44,77,119,-55,119,-49,-51,-50,-47,-48,119,135,77,77,77,77,77,77,-54,77,-67,77,77,-62,-64,-59,-60,-61,-63,-66,-65,]),'LPAREN':([9,13,14,16,22,50,53,56,61,73,74,76,79,80,81,85,86,91,92,93,94,97,120,121,122,123,124,125,128,134,135,],[18,-10,23,-10,-11,73,79,81,85,73,81,73,97,73,73,97,73,73,73,73,73,97,73,73,73,73,73,73,73,97,97,]),'IF':([20,41,44,46,47,55,58,60,62,64,65,78,87,88,106,107,108,109,117,126,129,130,131,133,143,144,],[-36,-71,-71,-22,61,-21,-24,-23,-27,-33,-26,-25,61,-34,-32,-29,-28,-71,61,-46,61,-45,61,-35,-31,-30,]),'LBRACE':([31,34,35,36,39,87,117,129,],[-71,-71,41,-19,44,109,109,109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'scalar_var':([50,59,73,76,79,80,81,85,86,91,92,93,94,97,120,121,122,123,124,125,128,134,135,],[70,83,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'function_call':([47,50,59,73,76,79,80,81,85,86,87,91,92,93,94,97,117,120,121,122,123,124,125,128,129,131,134,135,],[52,71,84,71,71,71,71,71,71,71,52,71,71,71,71,71,52,71,71,71,71,71,71,71,52,52,71,71,]),'function_body':([41,44,],[48,49,]),'arglist':([81,],[101,]),'decl_var':([3,11,19,26,27,38,51,],[12,21,29,33,21,43,12,]),'else_block':([64,],[88,]),'pointer_var':([47,50,59,73,76,79,80,81,85,86,87,91,92,93,94,97,117,120,121,122,123,124,125,128,129,131,134,135,],[63,68,82,68,68,68,68,68,68,68,63,68,68,68,68,68,63,68,68,68,68,68,68,68,63,63,68,68,]),'function_dummy':([31,34,],[35,39,]),'return_statement':([47,],[54,]),'program':([0,],[5,]),'statement':([47,87,117,129,131,],[55,108,108,108,55,]),'global_stmt':([0,7,],[7,7,]),'empty':([0,7,18,23,31,34,41,44,47,109,],[8,8,25,25,36,36,46,46,57,46,]),'function':([0,7,],[1,1,]),'decl_var_list':([3,51,],[10,10,]),'assignment':([47,87,117,129,131,],[58,58,58,58,58,]),'statement_block':([87,117,129,],[106,133,143,]),'paramlist':([18,23,],[24,30,]),'declaration':([0,7,47,87,117,129,131,],[6,6,60,60,60,60,60,]),'condition':([79,85,97,134,135,],[98,104,115,145,146,]),'if_else_block':([47,87,117,129,131,],[62,62,62,62,62,]),'global_stmt_list':([0,7,],[2,17,]),'function_var':([3,4,11,15,],[9,14,22,22,]),'if_block':([47,87,117,129,131,],[64,64,64,64,64,]),'while_block':([47,87,117,129,131,],[65,65,65,65,65,]),'statement_list':([41,44,109,],[47,47,131,]),'function_proto_dummy':([31,34,],[37,40,]),'expression':([50,73,76,79,80,81,85,86,91,92,93,94,97,120,121,122,123,124,125,128,134,135,],[75,89,95,99,100,103,99,105,111,112,113,114,116,136,137,138,139,140,141,142,99,99,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_stmt_list','program',1,'p_program','Parser.py',345),
  ('global_stmt_list -> empty','global_stmt_list',1,'p_global_stmt_list','Parser.py',350),
  ('global_stmt_list -> global_stmt global_stmt_list','global_stmt_list',2,'p_global_stmt_list','Parser.py',351),
  ('global_stmt -> declaration','global_stmt',1,'p_global_stmt','Parser.py',354),
  ('global_stmt -> function','global_stmt',1,'p_global_stmt','Parser.py',355),
  ('function -> VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE','function',9,'p_function','Parser.py',358),
  ('function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE','function',9,'p_function','Parser.py',359),
  ('function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON','function',7,'p_function','Parser.py',360),
  ('function -> VOID function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON','function',7,'p_function','Parser.py',361),
  ('function_var -> IDENTIFIER','function_var',1,'p_function_var','Parser.py',387),
  ('function_var -> ASTERISK function_var','function_var',2,'p_function_var','Parser.py',388),
  ('paramlist -> DATA_TYPE decl_var','paramlist',2,'p_paramlist','Parser.py',395),
  ('paramlist -> paramlist COMMA DATA_TYPE decl_var','paramlist',4,'p_paramlist','Parser.py',396),
  ('paramlist -> empty','paramlist',1,'p_paramlist','Parser.py',397),
  ('function_body -> statement_list return_statement','function_body',2,'p_function_body','Parser.py',406),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','Parser.py',410),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','Parser.py',411),
  ('return_statement -> empty','return_statement',1,'p_return_statement','Parser.py',412),
  ('function_dummy -> empty','function_dummy',1,'p_function_dummy','Parser.py',426),
  ('function_proto_dummy -> empty','function_proto_dummy',1,'p_function_proto_dummy','Parser.py',475),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','Parser.py',489),
  ('statement_list -> empty','statement_list',1,'p_statement_list','Parser.py',490),
  ('statement -> declaration','statement',1,'p_statement','Parser.py',497),
  ('statement -> assignment','statement',1,'p_statement','Parser.py',498),
  ('statement -> function_call SEMICOLON','statement',2,'p_statement','Parser.py',499),
  ('statement -> while_block','statement',1,'p_statement','Parser.py',500),
  ('statement -> if_else_block','statement',1,'p_statement','Parser.py',501),
  ('statement_block -> statement','statement_block',1,'p_statement_block','Parser.py',510),
  ('statement_block -> SEMICOLON','statement_block',1,'p_statement_block','Parser.py',511),
  ('statement_block -> LBRACE statement_list RBRACE','statement_block',3,'p_statement_block','Parser.py',512),
  ('if_block -> IF LPAREN condition RPAREN statement_block','if_block',5,'p_if_block','Parser.py',522),
  ('else_block -> ELSE statement_block','else_block',2,'p_else_block','Parser.py',526),
  ('if_else_block -> if_block','if_else_block',1,'p_if_else_block','Parser.py',530),
  ('if_else_block -> if_block else_block','if_else_block',2,'p_if_else_block','Parser.py',531),
  ('while_block -> WHILE LPAREN condition RPAREN statement_block','while_block',5,'p_while_block','Parser.py',538),
  ('declaration -> DATA_TYPE decl_var_list SEMICOLON','declaration',3,'p_declaration','Parser.py',542),
  ('decl_var_list -> decl_var','decl_var_list',1,'p_decl_var_list','Parser.py',552),
  ('decl_var_list -> decl_var_list COMMA decl_var','decl_var_list',3,'p_decl_var_list','Parser.py',553),
  ('decl_var -> IDENTIFIER','decl_var',1,'p_decl_var','Parser.py',560),
  ('decl_var -> ASTERISK decl_var','decl_var',2,'p_decl_var','Parser.py',561),
  ('pointer_var -> ASTERISK pointer_var','pointer_var',2,'p_pointer_var','Parser.py',568),
  ('pointer_var -> ASTERISK scalar_var','pointer_var',2,'p_pointer_var','Parser.py',569),
  ('scalar_var -> IDENTIFIER','scalar_var',1,'p_scalar_var','Parser.py',576),
  ('scalar_var -> AMPERSAND IDENTIFIER','scalar_var',2,'p_scalar_var','Parser.py',577),
  ('assignment -> pointer_var EQUALS expression SEMICOLON','assignment',4,'p_assignment','Parser.py',600),
  ('assignment -> IDENTIFIER EQUALS expression SEMICOLON','assignment',4,'p_assignment','Parser.py',601),
  ('expression -> expression PLUS expression','expression',3,'p_expression_add','Parser.py',627),
  ('expression -> expression MINUS expression','expression',3,'p_expression_subtract','Parser.py',641),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','Parser.py',655),
  ('expression -> expression ASTERISK expression','expression',3,'p_expression_multiply','Parser.py',659),
  ('expression -> expression FSLASH expression','expression',3,'p_expression_divide','Parser.py',673),
  ('expression -> MINUS expression','expression',2,'p_expression_negation','Parser.py',687),
  ('expression -> function_call','expression',1,'p_expression_function_call','Parser.py',698),
  ('function_call -> IDENTIFIER LPAREN arglist RPAREN','function_call',4,'p_function_call','Parser.py',702),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','Parser.py',703),
  ('function_call -> ASTERISK function_call','function_call',2,'p_function_call','Parser.py',704),
  ('arglist -> arglist COMMA expression','arglist',3,'p_arglist','Parser.py',742),
  ('arglist -> expression','arglist',1,'p_arglist','Parser.py',743),
  ('condition -> expression EE expression','condition',3,'p_condition_ee','Parser.py',751),
  ('condition -> expression NE expression','condition',3,'p_condition_ne','Parser.py',765),
  ('condition -> expression LT expression','condition',3,'p_condition_lt','Parser.py',779),
  ('condition -> expression GT expression','condition',3,'p_condition_gt','Parser.py',793),
  ('condition -> expression LTE expression','condition',3,'p_condition_lte','Parser.py',807),
  ('condition -> expression GTE expression','condition',3,'p_condition_gte','Parser.py',821),
  ('condition -> condition AMPERSAND AMPERSAND condition','condition',4,'p_condition_land','Parser.py',835),
  ('condition -> condition PIPE PIPE condition','condition',4,'p_condition_lor','Parser.py',849),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition_parenthesis','Parser.py',863),
  ('expression -> CONSTANT','expression',1,'p_expression_base_constant','Parser.py',867),
  ('expression -> pointer_var','expression',1,'p_expression_base_var','Parser.py',875),
  ('expression -> scalar_var','expression',1,'p_expression_base_var','Parser.py',876),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',884),
]
