Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> program
Rule 1     program -> global_stmt_list
Rule 2     global_stmt_list -> empty
Rule 3     global_stmt_list -> global_stmt global_stmt_list
Rule 4     global_stmt -> declaration
Rule 5     global_stmt -> function
Rule 6     function -> VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
Rule 7     function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
Rule 8     function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON
Rule 9     function -> VOID function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON
Rule 10    function_var -> IDENTIFIER
Rule 11    function_var -> ASTERISK function_var
Rule 12    paramlist -> DATA_TYPE decl_var
Rule 13    paramlist -> paramlist COMMA DATA_TYPE decl_var
Rule 14    paramlist -> empty
Rule 15    function_body -> statement_list return_statement
Rule 16    return_statement -> RETURN expression SEMICOLON
Rule 17    return_statement -> RETURN SEMICOLON
Rule 18    return_statement -> empty
Rule 19    function_dummy -> empty
Rule 20    function_proto_dummy -> empty
Rule 21    statement_list -> statement_list statement
Rule 22    statement_list -> empty
Rule 23    statement -> declaration
Rule 24    statement -> assignment
Rule 25    statement -> function_call SEMICOLON
Rule 26    statement -> while_block
Rule 27    statement -> if_else_block
Rule 28    statement_block -> statement
Rule 29    statement_block -> SEMICOLON
Rule 30    statement_block -> LBRACE statement_list RBRACE
Rule 31    if_block -> IF LPAREN condition RPAREN statement_block
Rule 32    else_block -> ELSE statement_block
Rule 33    if_else_block -> if_block
Rule 34    if_else_block -> if_block else_block
Rule 35    while_block -> WHILE LPAREN condition RPAREN statement_block
Rule 36    declaration -> DATA_TYPE decl_var_list SEMICOLON
Rule 37    decl_var_list -> decl_var
Rule 38    decl_var_list -> decl_var_list COMMA decl_var
Rule 39    decl_var -> IDENTIFIER
Rule 40    decl_var -> ASTERISK decl_var
Rule 41    pointer_var -> ASTERISK pointer_var
Rule 42    pointer_var -> ASTERISK scalar_var
Rule 43    scalar_var -> IDENTIFIER
Rule 44    scalar_var -> AMPERSAND IDENTIFIER
Rule 45    assignment -> pointer_var EQUALS expression SEMICOLON
Rule 46    assignment -> IDENTIFIER EQUALS expression SEMICOLON
Rule 47    expression -> expression PLUS expression
Rule 48    expression -> expression MINUS expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> expression ASTERISK expression
Rule 51    expression -> expression FSLASH expression
Rule 52    expression -> MINUS expression
Rule 53    expression -> function_call
Rule 54    function_call -> IDENTIFIER LPAREN arglist RPAREN
Rule 55    function_call -> IDENTIFIER LPAREN RPAREN
Rule 56    function_call -> ASTERISK function_call
Rule 57    arglist -> arglist COMMA expression
Rule 58    arglist -> expression
Rule 59    condition -> NOT condition
Rule 60    condition -> expression EE expression
Rule 61    condition -> expression NE expression
Rule 62    condition -> expression LT expression
Rule 63    condition -> expression GT expression
Rule 64    condition -> expression LTE expression
Rule 65    condition -> expression GTE expression
Rule 66    condition -> condition AMPERSAND AMPERSAND condition
Rule 67    condition -> condition PIPE PIPE condition
Rule 68    condition -> LPAREN condition RPAREN
Rule 69    expression -> CONSTANT
Rule 70    expression -> pointer_var
Rule 71    expression -> scalar_var
Rule 72    empty -> <empty>

Terminals, with rules where they appear

AMPERSAND            : 44 66 66
ASTERISK             : 11 40 41 42 50 56
COMMA                : 13 38 57
CONSTANT             : 69
DATA_TYPE            : 7 8 12 13 36
EE                   : 60
ELSE                 : 32
EQUALS               : 45 46
FSLASH               : 51
GT                   : 63
GTE                  : 65
IDENTIFIER           : 10 39 43 44 46 54 55
IF                   : 31
LBRACE               : 6 7 30
LPAREN               : 6 7 8 9 31 35 49 54 55 68
LT                   : 62
LTE                  : 64
MINUS                : 48 52
NE                   : 61
NEWLINE              : 
NOT                  : 59
PIPE                 : 67 67
PLUS                 : 47
RBRACE               : 6 7 30
RETURN               : 16 17
RPAREN               : 6 7 8 9 31 35 49 54 55 68
SEMICOLON            : 8 9 16 17 25 29 36 45 46
VOID                 : 6 9
WHILE                : 35
error                : 

Nonterminals, with rules where they appear

arglist              : 54 57
assignment           : 24
condition            : 31 35 59 66 66 67 67 68
decl_var             : 12 13 37 38 40
decl_var_list        : 36 38
declaration          : 4 23
else_block           : 34
empty                : 2 14 18 19 20 22
expression           : 16 45 46 47 47 48 48 49 50 50 51 51 52 57 58 60 60 61 61 62 62 63 63 64 64 65 65
function             : 5
function_body        : 6 7
function_call        : 25 53 56
function_dummy       : 6 7
function_proto_dummy : 8 9
function_var         : 6 7 8 9 11
global_stmt          : 3
global_stmt_list     : 1 3
if_block             : 33 34
if_else_block        : 27
paramlist            : 6 7 8 9 13
pointer_var          : 41 45 70
program              : 0
return_statement     : 15
scalar_var           : 42 71
statement            : 21 28
statement_block      : 31 32 35
statement_list       : 15 21 30
while_block          : 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . global_stmt_list
    (2) global_stmt_list -> . empty
    (3) global_stmt_list -> . global_stmt global_stmt_list
    (72) empty -> .
    (4) global_stmt -> . declaration
    (5) global_stmt -> . function
    (36) declaration -> . DATA_TYPE decl_var_list SEMICOLON
    (6) function -> . VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (7) function -> . DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (8) function -> . DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON
    (9) function -> . VOID function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON

    $end            reduce using rule 72 (empty -> .)
    DATA_TYPE       shift and go to state 7
    VOID            shift and go to state 8

    program                        shift and go to state 1
    global_stmt_list               shift and go to state 2
    empty                          shift and go to state 3
    global_stmt                    shift and go to state 4
    declaration                    shift and go to state 5
    function                       shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> global_stmt_list .

    $end            reduce using rule 1 (program -> global_stmt_list .)


state 3

    (2) global_stmt_list -> empty .

    $end            reduce using rule 2 (global_stmt_list -> empty .)


state 4

    (3) global_stmt_list -> global_stmt . global_stmt_list
    (2) global_stmt_list -> . empty
    (3) global_stmt_list -> . global_stmt global_stmt_list
    (72) empty -> .
    (4) global_stmt -> . declaration
    (5) global_stmt -> . function
    (36) declaration -> . DATA_TYPE decl_var_list SEMICOLON
    (6) function -> . VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (7) function -> . DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (8) function -> . DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON
    (9) function -> . VOID function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON

    $end            reduce using rule 72 (empty -> .)
    DATA_TYPE       shift and go to state 7
    VOID            shift and go to state 8

    global_stmt                    shift and go to state 4
    global_stmt_list               shift and go to state 9
    empty                          shift and go to state 3
    declaration                    shift and go to state 5
    function                       shift and go to state 6

state 5

    (4) global_stmt -> declaration .

    DATA_TYPE       reduce using rule 4 (global_stmt -> declaration .)
    VOID            reduce using rule 4 (global_stmt -> declaration .)
    $end            reduce using rule 4 (global_stmt -> declaration .)


state 6

    (5) global_stmt -> function .

    DATA_TYPE       reduce using rule 5 (global_stmt -> function .)
    VOID            reduce using rule 5 (global_stmt -> function .)
    $end            reduce using rule 5 (global_stmt -> function .)


state 7

    (36) declaration -> DATA_TYPE . decl_var_list SEMICOLON
    (7) function -> DATA_TYPE . function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (8) function -> DATA_TYPE . function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON
    (37) decl_var_list -> . decl_var
    (38) decl_var_list -> . decl_var_list COMMA decl_var
    (10) function_var -> . IDENTIFIER
    (11) function_var -> . ASTERISK function_var
    (39) decl_var -> . IDENTIFIER
    (40) decl_var -> . ASTERISK decl_var

    IDENTIFIER      shift and go to state 13
    ASTERISK        shift and go to state 14

    decl_var_list                  shift and go to state 10
    function_var                   shift and go to state 11
    decl_var                       shift and go to state 12

state 8

    (6) function -> VOID . function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (9) function -> VOID . function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON
    (10) function_var -> . IDENTIFIER
    (11) function_var -> . ASTERISK function_var

    IDENTIFIER      shift and go to state 16
    ASTERISK        shift and go to state 17

    function_var                   shift and go to state 15

state 9

    (3) global_stmt_list -> global_stmt global_stmt_list .

    $end            reduce using rule 3 (global_stmt_list -> global_stmt global_stmt_list .)


state 10

    (36) declaration -> DATA_TYPE decl_var_list . SEMICOLON
    (38) decl_var_list -> decl_var_list . COMMA decl_var

    SEMICOLON       shift and go to state 18
    COMMA           shift and go to state 19


state 11

    (7) function -> DATA_TYPE function_var . LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (8) function -> DATA_TYPE function_var . LPAREN paramlist RPAREN function_proto_dummy SEMICOLON

    LPAREN          shift and go to state 20


state 12

    (37) decl_var_list -> decl_var .

    SEMICOLON       reduce using rule 37 (decl_var_list -> decl_var .)
    COMMA           reduce using rule 37 (decl_var_list -> decl_var .)


state 13

    (10) function_var -> IDENTIFIER .
    (39) decl_var -> IDENTIFIER .

    LPAREN          reduce using rule 10 (function_var -> IDENTIFIER .)
    SEMICOLON       reduce using rule 39 (decl_var -> IDENTIFIER .)
    COMMA           reduce using rule 39 (decl_var -> IDENTIFIER .)


state 14

    (11) function_var -> ASTERISK . function_var
    (40) decl_var -> ASTERISK . decl_var
    (10) function_var -> . IDENTIFIER
    (11) function_var -> . ASTERISK function_var
    (39) decl_var -> . IDENTIFIER
    (40) decl_var -> . ASTERISK decl_var

    IDENTIFIER      shift and go to state 13
    ASTERISK        shift and go to state 14

    function_var                   shift and go to state 21
    decl_var                       shift and go to state 22

state 15

    (6) function -> VOID function_var . LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (9) function -> VOID function_var . LPAREN paramlist RPAREN function_proto_dummy SEMICOLON

    LPAREN          shift and go to state 23


state 16

    (10) function_var -> IDENTIFIER .

    LPAREN          reduce using rule 10 (function_var -> IDENTIFIER .)


state 17

    (11) function_var -> ASTERISK . function_var
    (10) function_var -> . IDENTIFIER
    (11) function_var -> . ASTERISK function_var

    IDENTIFIER      shift and go to state 16
    ASTERISK        shift and go to state 17

    function_var                   shift and go to state 21

state 18

    (36) declaration -> DATA_TYPE decl_var_list SEMICOLON .

    DATA_TYPE       reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    VOID            reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    $end            reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    RETURN          reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    IDENTIFIER      reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    ASTERISK        reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    WHILE           reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    IF              reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    RBRACE          reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)
    ELSE            reduce using rule 36 (declaration -> DATA_TYPE decl_var_list SEMICOLON .)


state 19

    (38) decl_var_list -> decl_var_list COMMA . decl_var
    (39) decl_var -> . IDENTIFIER
    (40) decl_var -> . ASTERISK decl_var

    IDENTIFIER      shift and go to state 25
    ASTERISK        shift and go to state 26

    decl_var                       shift and go to state 24

state 20

    (7) function -> DATA_TYPE function_var LPAREN . paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (8) function -> DATA_TYPE function_var LPAREN . paramlist RPAREN function_proto_dummy SEMICOLON
    (12) paramlist -> . DATA_TYPE decl_var
    (13) paramlist -> . paramlist COMMA DATA_TYPE decl_var
    (14) paramlist -> . empty
    (72) empty -> .

    DATA_TYPE       shift and go to state 27
    RPAREN          reduce using rule 72 (empty -> .)
    COMMA           reduce using rule 72 (empty -> .)

    paramlist                      shift and go to state 28
    empty                          shift and go to state 29

state 21

    (11) function_var -> ASTERISK function_var .

    LPAREN          reduce using rule 11 (function_var -> ASTERISK function_var .)


state 22

    (40) decl_var -> ASTERISK decl_var .

    SEMICOLON       reduce using rule 40 (decl_var -> ASTERISK decl_var .)
    COMMA           reduce using rule 40 (decl_var -> ASTERISK decl_var .)
    RPAREN          reduce using rule 40 (decl_var -> ASTERISK decl_var .)


state 23

    (6) function -> VOID function_var LPAREN . paramlist RPAREN function_dummy LBRACE function_body RBRACE
    (9) function -> VOID function_var LPAREN . paramlist RPAREN function_proto_dummy SEMICOLON
    (12) paramlist -> . DATA_TYPE decl_var
    (13) paramlist -> . paramlist COMMA DATA_TYPE decl_var
    (14) paramlist -> . empty
    (72) empty -> .

    DATA_TYPE       shift and go to state 27
    RPAREN          reduce using rule 72 (empty -> .)
    COMMA           reduce using rule 72 (empty -> .)

    paramlist                      shift and go to state 30
    empty                          shift and go to state 29

state 24

    (38) decl_var_list -> decl_var_list COMMA decl_var .

    SEMICOLON       reduce using rule 38 (decl_var_list -> decl_var_list COMMA decl_var .)
    COMMA           reduce using rule 38 (decl_var_list -> decl_var_list COMMA decl_var .)


state 25

    (39) decl_var -> IDENTIFIER .

    SEMICOLON       reduce using rule 39 (decl_var -> IDENTIFIER .)
    COMMA           reduce using rule 39 (decl_var -> IDENTIFIER .)
    RPAREN          reduce using rule 39 (decl_var -> IDENTIFIER .)


state 26

    (40) decl_var -> ASTERISK . decl_var
    (39) decl_var -> . IDENTIFIER
    (40) decl_var -> . ASTERISK decl_var

    IDENTIFIER      shift and go to state 25
    ASTERISK        shift and go to state 26

    decl_var                       shift and go to state 22

state 27

    (12) paramlist -> DATA_TYPE . decl_var
    (39) decl_var -> . IDENTIFIER
    (40) decl_var -> . ASTERISK decl_var

    IDENTIFIER      shift and go to state 25
    ASTERISK        shift and go to state 26

    decl_var                       shift and go to state 31

state 28

    (7) function -> DATA_TYPE function_var LPAREN paramlist . RPAREN function_dummy LBRACE function_body RBRACE
    (8) function -> DATA_TYPE function_var LPAREN paramlist . RPAREN function_proto_dummy SEMICOLON
    (13) paramlist -> paramlist . COMMA DATA_TYPE decl_var

    RPAREN          shift and go to state 32
    COMMA           shift and go to state 33


state 29

    (14) paramlist -> empty .

    RPAREN          reduce using rule 14 (paramlist -> empty .)
    COMMA           reduce using rule 14 (paramlist -> empty .)


state 30

    (6) function -> VOID function_var LPAREN paramlist . RPAREN function_dummy LBRACE function_body RBRACE
    (9) function -> VOID function_var LPAREN paramlist . RPAREN function_proto_dummy SEMICOLON
    (13) paramlist -> paramlist . COMMA DATA_TYPE decl_var

    RPAREN          shift and go to state 34
    COMMA           shift and go to state 33


state 31

    (12) paramlist -> DATA_TYPE decl_var .

    RPAREN          reduce using rule 12 (paramlist -> DATA_TYPE decl_var .)
    COMMA           reduce using rule 12 (paramlist -> DATA_TYPE decl_var .)


state 32

    (7) function -> DATA_TYPE function_var LPAREN paramlist RPAREN . function_dummy LBRACE function_body RBRACE
    (8) function -> DATA_TYPE function_var LPAREN paramlist RPAREN . function_proto_dummy SEMICOLON
    (19) function_dummy -> . empty
    (20) function_proto_dummy -> . empty
    (72) empty -> .

    LBRACE          reduce using rule 72 (empty -> .)
    SEMICOLON       reduce using rule 72 (empty -> .)

    function_dummy                 shift and go to state 35
    function_proto_dummy           shift and go to state 36
    empty                          shift and go to state 37

state 33

    (13) paramlist -> paramlist COMMA . DATA_TYPE decl_var

    DATA_TYPE       shift and go to state 38


state 34

    (6) function -> VOID function_var LPAREN paramlist RPAREN . function_dummy LBRACE function_body RBRACE
    (9) function -> VOID function_var LPAREN paramlist RPAREN . function_proto_dummy SEMICOLON
    (19) function_dummy -> . empty
    (20) function_proto_dummy -> . empty
    (72) empty -> .

    LBRACE          reduce using rule 72 (empty -> .)
    SEMICOLON       reduce using rule 72 (empty -> .)

    function_dummy                 shift and go to state 39
    function_proto_dummy           shift and go to state 40
    empty                          shift and go to state 37

state 35

    (7) function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy . LBRACE function_body RBRACE

    LBRACE          shift and go to state 41


state 36

    (8) function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy . SEMICOLON

    SEMICOLON       shift and go to state 42


state 37

    (19) function_dummy -> empty .
    (20) function_proto_dummy -> empty .

    LBRACE          reduce using rule 19 (function_dummy -> empty .)
    SEMICOLON       reduce using rule 20 (function_proto_dummy -> empty .)


state 38

    (13) paramlist -> paramlist COMMA DATA_TYPE . decl_var
    (39) decl_var -> . IDENTIFIER
    (40) decl_var -> . ASTERISK decl_var

    IDENTIFIER      shift and go to state 25
    ASTERISK        shift and go to state 26

    decl_var                       shift and go to state 43

state 39

    (6) function -> VOID function_var LPAREN paramlist RPAREN function_dummy . LBRACE function_body RBRACE

    LBRACE          shift and go to state 44


state 40

    (9) function -> VOID function_var LPAREN paramlist RPAREN function_proto_dummy . SEMICOLON

    SEMICOLON       shift and go to state 45


state 41

    (7) function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE . function_body RBRACE
    (15) function_body -> . statement_list return_statement
    (21) statement_list -> . statement_list statement
    (22) statement_list -> . empty
    (72) empty -> .

    RETURN          reduce using rule 72 (empty -> .)
    DATA_TYPE       reduce using rule 72 (empty -> .)
    IDENTIFIER      reduce using rule 72 (empty -> .)
    ASTERISK        reduce using rule 72 (empty -> .)
    WHILE           reduce using rule 72 (empty -> .)
    IF              reduce using rule 72 (empty -> .)
    RBRACE          reduce using rule 72 (empty -> .)

    function_body                  shift and go to state 46
    statement_list                 shift and go to state 47
    empty                          shift and go to state 48

state 42

    (8) function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON .

    DATA_TYPE       reduce using rule 8 (function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON .)
    VOID            reduce using rule 8 (function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON .)
    $end            reduce using rule 8 (function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON .)


state 43

    (13) paramlist -> paramlist COMMA DATA_TYPE decl_var .

    RPAREN          reduce using rule 13 (paramlist -> paramlist COMMA DATA_TYPE decl_var .)
    COMMA           reduce using rule 13 (paramlist -> paramlist COMMA DATA_TYPE decl_var .)


state 44

    (6) function -> VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE . function_body RBRACE
    (15) function_body -> . statement_list return_statement
    (21) statement_list -> . statement_list statement
    (22) statement_list -> . empty
    (72) empty -> .

    RETURN          reduce using rule 72 (empty -> .)
    DATA_TYPE       reduce using rule 72 (empty -> .)
    IDENTIFIER      reduce using rule 72 (empty -> .)
    ASTERISK        reduce using rule 72 (empty -> .)
    WHILE           reduce using rule 72 (empty -> .)
    IF              reduce using rule 72 (empty -> .)
    RBRACE          reduce using rule 72 (empty -> .)

    function_body                  shift and go to state 49
    statement_list                 shift and go to state 47
    empty                          shift and go to state 48

state 45

    (9) function -> VOID function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON .

    DATA_TYPE       reduce using rule 9 (function -> VOID function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON .)
    VOID            reduce using rule 9 (function -> VOID function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON .)
    $end            reduce using rule 9 (function -> VOID function_var LPAREN paramlist RPAREN function_proto_dummy SEMICOLON .)


state 46

    (7) function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body . RBRACE

    RBRACE          shift and go to state 50


state 47

    (15) function_body -> statement_list . return_statement
    (21) statement_list -> statement_list . statement
    (16) return_statement -> . RETURN expression SEMICOLON
    (17) return_statement -> . RETURN SEMICOLON
    (18) return_statement -> . empty
    (23) statement -> . declaration
    (24) statement -> . assignment
    (25) statement -> . function_call SEMICOLON
    (26) statement -> . while_block
    (27) statement -> . if_else_block
    (72) empty -> .
    (36) declaration -> . DATA_TYPE decl_var_list SEMICOLON
    (45) assignment -> . pointer_var EQUALS expression SEMICOLON
    (46) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (35) while_block -> . WHILE LPAREN condition RPAREN statement_block
    (33) if_else_block -> . if_block
    (34) if_else_block -> . if_block else_block
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (31) if_block -> . IF LPAREN condition RPAREN statement_block

    RETURN          shift and go to state 53
    RBRACE          reduce using rule 72 (empty -> .)
    DATA_TYPE       shift and go to state 60
    IDENTIFIER      shift and go to state 62
    ASTERISK        shift and go to state 63
    WHILE           shift and go to state 64
    IF              shift and go to state 66

    return_statement               shift and go to state 51
    statement                      shift and go to state 52
    empty                          shift and go to state 54
    declaration                    shift and go to state 55
    assignment                     shift and go to state 56
    function_call                  shift and go to state 57
    while_block                    shift and go to state 58
    if_else_block                  shift and go to state 59
    pointer_var                    shift and go to state 61
    if_block                       shift and go to state 65

state 48

    (22) statement_list -> empty .

    RETURN          reduce using rule 22 (statement_list -> empty .)
    DATA_TYPE       reduce using rule 22 (statement_list -> empty .)
    IDENTIFIER      reduce using rule 22 (statement_list -> empty .)
    ASTERISK        reduce using rule 22 (statement_list -> empty .)
    WHILE           reduce using rule 22 (statement_list -> empty .)
    IF              reduce using rule 22 (statement_list -> empty .)
    RBRACE          reduce using rule 22 (statement_list -> empty .)


state 49

    (6) function -> VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body . RBRACE

    RBRACE          shift and go to state 67


state 50

    (7) function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE .

    DATA_TYPE       reduce using rule 7 (function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE .)
    VOID            reduce using rule 7 (function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE .)
    $end            reduce using rule 7 (function -> DATA_TYPE function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE .)


state 51

    (15) function_body -> statement_list return_statement .

    RBRACE          reduce using rule 15 (function_body -> statement_list return_statement .)


state 52

    (21) statement_list -> statement_list statement .

    RETURN          reduce using rule 21 (statement_list -> statement_list statement .)
    DATA_TYPE       reduce using rule 21 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 21 (statement_list -> statement_list statement .)
    ASTERISK        reduce using rule 21 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 21 (statement_list -> statement_list statement .)
    IF              reduce using rule 21 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 21 (statement_list -> statement_list statement .)


state 53

    (16) return_statement -> RETURN . expression SEMICOLON
    (17) return_statement -> RETURN . SEMICOLON
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    SEMICOLON       shift and go to state 69
    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 68
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 54

    (18) return_statement -> empty .

    RBRACE          reduce using rule 18 (return_statement -> empty .)


state 55

    (23) statement -> declaration .

    RETURN          reduce using rule 23 (statement -> declaration .)
    DATA_TYPE       reduce using rule 23 (statement -> declaration .)
    IDENTIFIER      reduce using rule 23 (statement -> declaration .)
    ASTERISK        reduce using rule 23 (statement -> declaration .)
    WHILE           reduce using rule 23 (statement -> declaration .)
    IF              reduce using rule 23 (statement -> declaration .)
    RBRACE          reduce using rule 23 (statement -> declaration .)
    ELSE            reduce using rule 23 (statement -> declaration .)


state 56

    (24) statement -> assignment .

    RETURN          reduce using rule 24 (statement -> assignment .)
    DATA_TYPE       reduce using rule 24 (statement -> assignment .)
    IDENTIFIER      reduce using rule 24 (statement -> assignment .)
    ASTERISK        reduce using rule 24 (statement -> assignment .)
    WHILE           reduce using rule 24 (statement -> assignment .)
    IF              reduce using rule 24 (statement -> assignment .)
    RBRACE          reduce using rule 24 (statement -> assignment .)
    ELSE            reduce using rule 24 (statement -> assignment .)


state 57

    (25) statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 78


state 58

    (26) statement -> while_block .

    RETURN          reduce using rule 26 (statement -> while_block .)
    DATA_TYPE       reduce using rule 26 (statement -> while_block .)
    IDENTIFIER      reduce using rule 26 (statement -> while_block .)
    ASTERISK        reduce using rule 26 (statement -> while_block .)
    WHILE           reduce using rule 26 (statement -> while_block .)
    IF              reduce using rule 26 (statement -> while_block .)
    RBRACE          reduce using rule 26 (statement -> while_block .)
    ELSE            reduce using rule 26 (statement -> while_block .)


state 59

    (27) statement -> if_else_block .

    RETURN          reduce using rule 27 (statement -> if_else_block .)
    DATA_TYPE       reduce using rule 27 (statement -> if_else_block .)
    IDENTIFIER      reduce using rule 27 (statement -> if_else_block .)
    ASTERISK        reduce using rule 27 (statement -> if_else_block .)
    WHILE           reduce using rule 27 (statement -> if_else_block .)
    IF              reduce using rule 27 (statement -> if_else_block .)
    RBRACE          reduce using rule 27 (statement -> if_else_block .)
    ELSE            reduce using rule 27 (statement -> if_else_block .)


state 60

    (36) declaration -> DATA_TYPE . decl_var_list SEMICOLON
    (37) decl_var_list -> . decl_var
    (38) decl_var_list -> . decl_var_list COMMA decl_var
    (39) decl_var -> . IDENTIFIER
    (40) decl_var -> . ASTERISK decl_var

    IDENTIFIER      shift and go to state 25
    ASTERISK        shift and go to state 26

    decl_var_list                  shift and go to state 10
    decl_var                       shift and go to state 12

state 61

    (45) assignment -> pointer_var . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 79


state 62

    (46) assignment -> IDENTIFIER . EQUALS expression SEMICOLON
    (54) function_call -> IDENTIFIER . LPAREN arglist RPAREN
    (55) function_call -> IDENTIFIER . LPAREN RPAREN

    EQUALS          shift and go to state 80
    LPAREN          shift and go to state 81


state 63

    (56) function_call -> ASTERISK . function_call
    (41) pointer_var -> ASTERISK . pointer_var
    (42) pointer_var -> ASTERISK . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    function_call                  shift and go to state 82
    pointer_var                    shift and go to state 83
    scalar_var                     shift and go to state 84

state 64

    (35) while_block -> WHILE . LPAREN condition RPAREN statement_block

    LPAREN          shift and go to state 85


state 65

    (33) if_else_block -> if_block .
    (34) if_else_block -> if_block . else_block
    (32) else_block -> . ELSE statement_block

    RETURN          reduce using rule 33 (if_else_block -> if_block .)
    DATA_TYPE       reduce using rule 33 (if_else_block -> if_block .)
    IDENTIFIER      reduce using rule 33 (if_else_block -> if_block .)
    ASTERISK        reduce using rule 33 (if_else_block -> if_block .)
    WHILE           reduce using rule 33 (if_else_block -> if_block .)
    IF              reduce using rule 33 (if_else_block -> if_block .)
    RBRACE          reduce using rule 33 (if_else_block -> if_block .)
    ELSE            shift and go to state 87

  ! ELSE            [ reduce using rule 33 (if_else_block -> if_block .) ]

    else_block                     shift and go to state 86

state 66

    (31) if_block -> IF . LPAREN condition RPAREN statement_block

    LPAREN          shift and go to state 88


state 67

    (6) function -> VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE .

    DATA_TYPE       reduce using rule 6 (function -> VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE .)
    VOID            reduce using rule 6 (function -> VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE .)
    $end            reduce using rule 6 (function -> VOID function_var LPAREN paramlist RPAREN function_dummy LBRACE function_body RBRACE .)


state 68

    (16) return_statement -> RETURN expression . SEMICOLON
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    SEMICOLON       shift and go to state 89
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 69

    (17) return_statement -> RETURN SEMICOLON .

    RBRACE          reduce using rule 17 (return_statement -> RETURN SEMICOLON .)


state 70

    (52) expression -> MINUS . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 94
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 71

    (49) expression -> LPAREN . expression RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 95
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 72

    (53) expression -> function_call .

    SEMICOLON       reduce using rule 53 (expression -> function_call .)
    PLUS            reduce using rule 53 (expression -> function_call .)
    MINUS           reduce using rule 53 (expression -> function_call .)
    ASTERISK        reduce using rule 53 (expression -> function_call .)
    FSLASH          reduce using rule 53 (expression -> function_call .)
    RPAREN          reduce using rule 53 (expression -> function_call .)
    COMMA           reduce using rule 53 (expression -> function_call .)
    EE              reduce using rule 53 (expression -> function_call .)
    NE              reduce using rule 53 (expression -> function_call .)
    LT              reduce using rule 53 (expression -> function_call .)
    GT              reduce using rule 53 (expression -> function_call .)
    LTE             reduce using rule 53 (expression -> function_call .)
    GTE             reduce using rule 53 (expression -> function_call .)
    AMPERSAND       reduce using rule 53 (expression -> function_call .)
    PIPE            reduce using rule 53 (expression -> function_call .)


state 73

    (69) expression -> CONSTANT .

    SEMICOLON       reduce using rule 69 (expression -> CONSTANT .)
    PLUS            reduce using rule 69 (expression -> CONSTANT .)
    MINUS           reduce using rule 69 (expression -> CONSTANT .)
    ASTERISK        reduce using rule 69 (expression -> CONSTANT .)
    FSLASH          reduce using rule 69 (expression -> CONSTANT .)
    RPAREN          reduce using rule 69 (expression -> CONSTANT .)
    COMMA           reduce using rule 69 (expression -> CONSTANT .)
    EE              reduce using rule 69 (expression -> CONSTANT .)
    NE              reduce using rule 69 (expression -> CONSTANT .)
    LT              reduce using rule 69 (expression -> CONSTANT .)
    GT              reduce using rule 69 (expression -> CONSTANT .)
    LTE             reduce using rule 69 (expression -> CONSTANT .)
    GTE             reduce using rule 69 (expression -> CONSTANT .)
    AMPERSAND       reduce using rule 69 (expression -> CONSTANT .)
    PIPE            reduce using rule 69 (expression -> CONSTANT .)


state 74

    (70) expression -> pointer_var .

    SEMICOLON       reduce using rule 70 (expression -> pointer_var .)
    PLUS            reduce using rule 70 (expression -> pointer_var .)
    MINUS           reduce using rule 70 (expression -> pointer_var .)
    ASTERISK        reduce using rule 70 (expression -> pointer_var .)
    FSLASH          reduce using rule 70 (expression -> pointer_var .)
    RPAREN          reduce using rule 70 (expression -> pointer_var .)
    COMMA           reduce using rule 70 (expression -> pointer_var .)
    EE              reduce using rule 70 (expression -> pointer_var .)
    NE              reduce using rule 70 (expression -> pointer_var .)
    LT              reduce using rule 70 (expression -> pointer_var .)
    GT              reduce using rule 70 (expression -> pointer_var .)
    LTE             reduce using rule 70 (expression -> pointer_var .)
    GTE             reduce using rule 70 (expression -> pointer_var .)
    AMPERSAND       reduce using rule 70 (expression -> pointer_var .)
    PIPE            reduce using rule 70 (expression -> pointer_var .)


state 75

    (71) expression -> scalar_var .

    SEMICOLON       reduce using rule 71 (expression -> scalar_var .)
    PLUS            reduce using rule 71 (expression -> scalar_var .)
    MINUS           reduce using rule 71 (expression -> scalar_var .)
    ASTERISK        reduce using rule 71 (expression -> scalar_var .)
    FSLASH          reduce using rule 71 (expression -> scalar_var .)
    RPAREN          reduce using rule 71 (expression -> scalar_var .)
    COMMA           reduce using rule 71 (expression -> scalar_var .)
    EE              reduce using rule 71 (expression -> scalar_var .)
    NE              reduce using rule 71 (expression -> scalar_var .)
    LT              reduce using rule 71 (expression -> scalar_var .)
    GT              reduce using rule 71 (expression -> scalar_var .)
    LTE             reduce using rule 71 (expression -> scalar_var .)
    GTE             reduce using rule 71 (expression -> scalar_var .)
    AMPERSAND       reduce using rule 71 (expression -> scalar_var .)
    PIPE            reduce using rule 71 (expression -> scalar_var .)


state 76

    (54) function_call -> IDENTIFIER . LPAREN arglist RPAREN
    (55) function_call -> IDENTIFIER . LPAREN RPAREN
    (43) scalar_var -> IDENTIFIER .

    LPAREN          shift and go to state 81
    SEMICOLON       reduce using rule 43 (scalar_var -> IDENTIFIER .)
    PLUS            reduce using rule 43 (scalar_var -> IDENTIFIER .)
    MINUS           reduce using rule 43 (scalar_var -> IDENTIFIER .)
    ASTERISK        reduce using rule 43 (scalar_var -> IDENTIFIER .)
    FSLASH          reduce using rule 43 (scalar_var -> IDENTIFIER .)
    EQUALS          reduce using rule 43 (scalar_var -> IDENTIFIER .)
    RPAREN          reduce using rule 43 (scalar_var -> IDENTIFIER .)
    COMMA           reduce using rule 43 (scalar_var -> IDENTIFIER .)
    EE              reduce using rule 43 (scalar_var -> IDENTIFIER .)
    NE              reduce using rule 43 (scalar_var -> IDENTIFIER .)
    LT              reduce using rule 43 (scalar_var -> IDENTIFIER .)
    GT              reduce using rule 43 (scalar_var -> IDENTIFIER .)
    LTE             reduce using rule 43 (scalar_var -> IDENTIFIER .)
    GTE             reduce using rule 43 (scalar_var -> IDENTIFIER .)
    AMPERSAND       reduce using rule 43 (scalar_var -> IDENTIFIER .)
    PIPE            reduce using rule 43 (scalar_var -> IDENTIFIER .)


state 77

    (44) scalar_var -> AMPERSAND . IDENTIFIER

    IDENTIFIER      shift and go to state 96


state 78

    (25) statement -> function_call SEMICOLON .

    RETURN          reduce using rule 25 (statement -> function_call SEMICOLON .)
    DATA_TYPE       reduce using rule 25 (statement -> function_call SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (statement -> function_call SEMICOLON .)
    ASTERISK        reduce using rule 25 (statement -> function_call SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> function_call SEMICOLON .)
    IF              reduce using rule 25 (statement -> function_call SEMICOLON .)
    RBRACE          reduce using rule 25 (statement -> function_call SEMICOLON .)
    ELSE            reduce using rule 25 (statement -> function_call SEMICOLON .)


state 79

    (45) assignment -> pointer_var EQUALS . expression SEMICOLON
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    pointer_var                    shift and go to state 74
    expression                     shift and go to state 97
    function_call                  shift and go to state 72
    scalar_var                     shift and go to state 75

state 80

    (46) assignment -> IDENTIFIER EQUALS . expression SEMICOLON
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 98
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 81

    (54) function_call -> IDENTIFIER LPAREN . arglist RPAREN
    (55) function_call -> IDENTIFIER LPAREN . RPAREN
    (57) arglist -> . arglist COMMA expression
    (58) arglist -> . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    RPAREN          shift and go to state 100
    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    arglist                        shift and go to state 99
    expression                     shift and go to state 101
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 82

    (56) function_call -> ASTERISK function_call .

    SEMICOLON       reduce using rule 56 (function_call -> ASTERISK function_call .)
    PLUS            reduce using rule 56 (function_call -> ASTERISK function_call .)
    MINUS           reduce using rule 56 (function_call -> ASTERISK function_call .)
    ASTERISK        reduce using rule 56 (function_call -> ASTERISK function_call .)
    FSLASH          reduce using rule 56 (function_call -> ASTERISK function_call .)
    RPAREN          reduce using rule 56 (function_call -> ASTERISK function_call .)
    COMMA           reduce using rule 56 (function_call -> ASTERISK function_call .)
    EE              reduce using rule 56 (function_call -> ASTERISK function_call .)
    NE              reduce using rule 56 (function_call -> ASTERISK function_call .)
    LT              reduce using rule 56 (function_call -> ASTERISK function_call .)
    GT              reduce using rule 56 (function_call -> ASTERISK function_call .)
    LTE             reduce using rule 56 (function_call -> ASTERISK function_call .)
    GTE             reduce using rule 56 (function_call -> ASTERISK function_call .)
    AMPERSAND       reduce using rule 56 (function_call -> ASTERISK function_call .)
    PIPE            reduce using rule 56 (function_call -> ASTERISK function_call .)


state 83

    (41) pointer_var -> ASTERISK pointer_var .

    EQUALS          reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    SEMICOLON       reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    PLUS            reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    MINUS           reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    ASTERISK        reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    FSLASH          reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    RPAREN          reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    COMMA           reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    EE              reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    NE              reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    LT              reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    GT              reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    LTE             reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    GTE             reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    AMPERSAND       reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)
    PIPE            reduce using rule 41 (pointer_var -> ASTERISK pointer_var .)


state 84

    (42) pointer_var -> ASTERISK scalar_var .

    EQUALS          reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    SEMICOLON       reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    PLUS            reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    MINUS           reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    ASTERISK        reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    FSLASH          reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    RPAREN          reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    COMMA           reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    EE              reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    NE              reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    LT              reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    GT              reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    LTE             reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    GTE             reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    AMPERSAND       reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)
    PIPE            reduce using rule 42 (pointer_var -> ASTERISK scalar_var .)


state 85

    (35) while_block -> WHILE LPAREN . condition RPAREN statement_block
    (59) condition -> . NOT condition
    (60) condition -> . expression EE expression
    (61) condition -> . expression NE expression
    (62) condition -> . expression LT expression
    (63) condition -> . expression GT expression
    (64) condition -> . expression LTE expression
    (65) condition -> . expression GTE expression
    (66) condition -> . condition AMPERSAND AMPERSAND condition
    (67) condition -> . condition PIPE PIPE condition
    (68) condition -> . LPAREN condition RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    NOT             shift and go to state 104
    LPAREN          shift and go to state 102
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    condition                      shift and go to state 103
    expression                     shift and go to state 105
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 86

    (34) if_else_block -> if_block else_block .

    RETURN          reduce using rule 34 (if_else_block -> if_block else_block .)
    DATA_TYPE       reduce using rule 34 (if_else_block -> if_block else_block .)
    IDENTIFIER      reduce using rule 34 (if_else_block -> if_block else_block .)
    ASTERISK        reduce using rule 34 (if_else_block -> if_block else_block .)
    WHILE           reduce using rule 34 (if_else_block -> if_block else_block .)
    IF              reduce using rule 34 (if_else_block -> if_block else_block .)
    RBRACE          reduce using rule 34 (if_else_block -> if_block else_block .)
    ELSE            reduce using rule 34 (if_else_block -> if_block else_block .)


state 87

    (32) else_block -> ELSE . statement_block
    (28) statement_block -> . statement
    (29) statement_block -> . SEMICOLON
    (30) statement_block -> . LBRACE statement_list RBRACE
    (23) statement -> . declaration
    (24) statement -> . assignment
    (25) statement -> . function_call SEMICOLON
    (26) statement -> . while_block
    (27) statement -> . if_else_block
    (36) declaration -> . DATA_TYPE decl_var_list SEMICOLON
    (45) assignment -> . pointer_var EQUALS expression SEMICOLON
    (46) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (35) while_block -> . WHILE LPAREN condition RPAREN statement_block
    (33) if_else_block -> . if_block
    (34) if_else_block -> . if_block else_block
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (31) if_block -> . IF LPAREN condition RPAREN statement_block

    SEMICOLON       shift and go to state 108
    LBRACE          shift and go to state 109
    DATA_TYPE       shift and go to state 60
    IDENTIFIER      shift and go to state 62
    ASTERISK        shift and go to state 63
    WHILE           shift and go to state 64
    IF              shift and go to state 66

    statement_block                shift and go to state 106
    statement                      shift and go to state 107
    declaration                    shift and go to state 55
    assignment                     shift and go to state 56
    function_call                  shift and go to state 57
    while_block                    shift and go to state 58
    if_else_block                  shift and go to state 59
    pointer_var                    shift and go to state 61
    if_block                       shift and go to state 65

state 88

    (31) if_block -> IF LPAREN . condition RPAREN statement_block
    (59) condition -> . NOT condition
    (60) condition -> . expression EE expression
    (61) condition -> . expression NE expression
    (62) condition -> . expression LT expression
    (63) condition -> . expression GT expression
    (64) condition -> . expression LTE expression
    (65) condition -> . expression GTE expression
    (66) condition -> . condition AMPERSAND AMPERSAND condition
    (67) condition -> . condition PIPE PIPE condition
    (68) condition -> . LPAREN condition RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    NOT             shift and go to state 104
    LPAREN          shift and go to state 102
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    condition                      shift and go to state 110
    expression                     shift and go to state 105
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 89

    (16) return_statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 16 (return_statement -> RETURN expression SEMICOLON .)


state 90

    (47) expression -> expression PLUS . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 111
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 91

    (48) expression -> expression MINUS . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 112
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 92

    (50) expression -> expression ASTERISK . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 113
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 93

    (51) expression -> expression FSLASH . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 114
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 94

    (52) expression -> MINUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    SEMICOLON       reduce using rule 52 (expression -> MINUS expression .)
    PLUS            reduce using rule 52 (expression -> MINUS expression .)
    MINUS           reduce using rule 52 (expression -> MINUS expression .)
    ASTERISK        reduce using rule 52 (expression -> MINUS expression .)
    FSLASH          reduce using rule 52 (expression -> MINUS expression .)
    RPAREN          reduce using rule 52 (expression -> MINUS expression .)
    COMMA           reduce using rule 52 (expression -> MINUS expression .)
    EE              reduce using rule 52 (expression -> MINUS expression .)
    NE              reduce using rule 52 (expression -> MINUS expression .)
    LT              reduce using rule 52 (expression -> MINUS expression .)
    GT              reduce using rule 52 (expression -> MINUS expression .)
    LTE             reduce using rule 52 (expression -> MINUS expression .)
    GTE             reduce using rule 52 (expression -> MINUS expression .)
    AMPERSAND       reduce using rule 52 (expression -> MINUS expression .)
    PIPE            reduce using rule 52 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! ASTERISK        [ shift and go to state 92 ]
  ! FSLASH          [ shift and go to state 93 ]


state 95

    (49) expression -> LPAREN expression . RPAREN
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          shift and go to state 115
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 96

    (44) scalar_var -> AMPERSAND IDENTIFIER .

    SEMICOLON       reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    PLUS            reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    MINUS           reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    ASTERISK        reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    FSLASH          reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    EQUALS          reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    RPAREN          reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    COMMA           reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    EE              reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    NE              reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    LT              reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    GT              reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    LTE             reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    GTE             reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    AMPERSAND       reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)
    PIPE            reduce using rule 44 (scalar_var -> AMPERSAND IDENTIFIER .)


state 97

    (45) assignment -> pointer_var EQUALS expression . SEMICOLON
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    SEMICOLON       shift and go to state 116
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 98

    (46) assignment -> IDENTIFIER EQUALS expression . SEMICOLON
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    SEMICOLON       shift and go to state 117
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 99

    (54) function_call -> IDENTIFIER LPAREN arglist . RPAREN
    (57) arglist -> arglist . COMMA expression

    RPAREN          shift and go to state 118
    COMMA           shift and go to state 119


state 100

    (55) function_call -> IDENTIFIER LPAREN RPAREN .

    SEMICOLON       reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASTERISK        reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    FSLASH          reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EE              reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NE              reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GT              reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LTE             reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GTE             reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AMPERSAND       reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PIPE            reduce using rule 55 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 101

    (58) arglist -> expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          reduce using rule 58 (arglist -> expression .)
    COMMA           reduce using rule 58 (arglist -> expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 102

    (68) condition -> LPAREN . condition RPAREN
    (49) expression -> LPAREN . expression RPAREN
    (59) condition -> . NOT condition
    (60) condition -> . expression EE expression
    (61) condition -> . expression NE expression
    (62) condition -> . expression LT expression
    (63) condition -> . expression GT expression
    (64) condition -> . expression LTE expression
    (65) condition -> . expression GTE expression
    (66) condition -> . condition AMPERSAND AMPERSAND condition
    (67) condition -> . condition PIPE PIPE condition
    (68) condition -> . LPAREN condition RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    NOT             shift and go to state 104
    LPAREN          shift and go to state 102
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    condition                      shift and go to state 120
    expression                     shift and go to state 121
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 103

    (35) while_block -> WHILE LPAREN condition . RPAREN statement_block
    (66) condition -> condition . AMPERSAND AMPERSAND condition
    (67) condition -> condition . PIPE PIPE condition

    RPAREN          shift and go to state 122
    AMPERSAND       shift and go to state 123
    PIPE            shift and go to state 124


state 104

    (59) condition -> NOT . condition
    (59) condition -> . NOT condition
    (60) condition -> . expression EE expression
    (61) condition -> . expression NE expression
    (62) condition -> . expression LT expression
    (63) condition -> . expression GT expression
    (64) condition -> . expression LTE expression
    (65) condition -> . expression GTE expression
    (66) condition -> . condition AMPERSAND AMPERSAND condition
    (67) condition -> . condition PIPE PIPE condition
    (68) condition -> . LPAREN condition RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    NOT             shift and go to state 104
    LPAREN          shift and go to state 102
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    condition                      shift and go to state 125
    expression                     shift and go to state 105
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 105

    (60) condition -> expression . EE expression
    (61) condition -> expression . NE expression
    (62) condition -> expression . LT expression
    (63) condition -> expression . GT expression
    (64) condition -> expression . LTE expression
    (65) condition -> expression . GTE expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    EE              shift and go to state 126
    NE              shift and go to state 127
    LT              shift and go to state 128
    GT              shift and go to state 129
    LTE             shift and go to state 130
    GTE             shift and go to state 131
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 106

    (32) else_block -> ELSE statement_block .

    RETURN          reduce using rule 32 (else_block -> ELSE statement_block .)
    DATA_TYPE       reduce using rule 32 (else_block -> ELSE statement_block .)
    IDENTIFIER      reduce using rule 32 (else_block -> ELSE statement_block .)
    ASTERISK        reduce using rule 32 (else_block -> ELSE statement_block .)
    WHILE           reduce using rule 32 (else_block -> ELSE statement_block .)
    IF              reduce using rule 32 (else_block -> ELSE statement_block .)
    RBRACE          reduce using rule 32 (else_block -> ELSE statement_block .)
    ELSE            reduce using rule 32 (else_block -> ELSE statement_block .)


state 107

    (28) statement_block -> statement .

    RETURN          reduce using rule 28 (statement_block -> statement .)
    DATA_TYPE       reduce using rule 28 (statement_block -> statement .)
    IDENTIFIER      reduce using rule 28 (statement_block -> statement .)
    ASTERISK        reduce using rule 28 (statement_block -> statement .)
    WHILE           reduce using rule 28 (statement_block -> statement .)
    IF              reduce using rule 28 (statement_block -> statement .)
    RBRACE          reduce using rule 28 (statement_block -> statement .)
    ELSE            reduce using rule 28 (statement_block -> statement .)


state 108

    (29) statement_block -> SEMICOLON .

    RETURN          reduce using rule 29 (statement_block -> SEMICOLON .)
    DATA_TYPE       reduce using rule 29 (statement_block -> SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (statement_block -> SEMICOLON .)
    ASTERISK        reduce using rule 29 (statement_block -> SEMICOLON .)
    WHILE           reduce using rule 29 (statement_block -> SEMICOLON .)
    IF              reduce using rule 29 (statement_block -> SEMICOLON .)
    RBRACE          reduce using rule 29 (statement_block -> SEMICOLON .)
    ELSE            reduce using rule 29 (statement_block -> SEMICOLON .)


state 109

    (30) statement_block -> LBRACE . statement_list RBRACE
    (21) statement_list -> . statement_list statement
    (22) statement_list -> . empty
    (72) empty -> .

    RBRACE          reduce using rule 72 (empty -> .)
    DATA_TYPE       reduce using rule 72 (empty -> .)
    IDENTIFIER      reduce using rule 72 (empty -> .)
    ASTERISK        reduce using rule 72 (empty -> .)
    WHILE           reduce using rule 72 (empty -> .)
    IF              reduce using rule 72 (empty -> .)

    statement_list                 shift and go to state 132
    empty                          shift and go to state 48

state 110

    (31) if_block -> IF LPAREN condition . RPAREN statement_block
    (66) condition -> condition . AMPERSAND AMPERSAND condition
    (67) condition -> condition . PIPE PIPE condition

    RPAREN          shift and go to state 133
    AMPERSAND       shift and go to state 123
    PIPE            shift and go to state 124


state 111

    (47) expression -> expression PLUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    SEMICOLON       reduce using rule 47 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 47 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 47 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 47 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 47 (expression -> expression PLUS expression .)
    EE              reduce using rule 47 (expression -> expression PLUS expression .)
    NE              reduce using rule 47 (expression -> expression PLUS expression .)
    LT              reduce using rule 47 (expression -> expression PLUS expression .)
    GT              reduce using rule 47 (expression -> expression PLUS expression .)
    LTE             reduce using rule 47 (expression -> expression PLUS expression .)
    GTE             reduce using rule 47 (expression -> expression PLUS expression .)
    AMPERSAND       reduce using rule 47 (expression -> expression PLUS expression .)
    PIPE            reduce using rule 47 (expression -> expression PLUS expression .)
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93

  ! ASTERISK        [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! FSLASH          [ reduce using rule 47 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]


state 112

    (48) expression -> expression MINUS expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    SEMICOLON       reduce using rule 48 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 48 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 48 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 48 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 48 (expression -> expression MINUS expression .)
    EE              reduce using rule 48 (expression -> expression MINUS expression .)
    NE              reduce using rule 48 (expression -> expression MINUS expression .)
    LT              reduce using rule 48 (expression -> expression MINUS expression .)
    GT              reduce using rule 48 (expression -> expression MINUS expression .)
    LTE             reduce using rule 48 (expression -> expression MINUS expression .)
    GTE             reduce using rule 48 (expression -> expression MINUS expression .)
    AMPERSAND       reduce using rule 48 (expression -> expression MINUS expression .)
    PIPE            reduce using rule 48 (expression -> expression MINUS expression .)
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93

  ! ASTERISK        [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! FSLASH          [ reduce using rule 48 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]


state 113

    (50) expression -> expression ASTERISK expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    SEMICOLON       reduce using rule 50 (expression -> expression ASTERISK expression .)
    PLUS            reduce using rule 50 (expression -> expression ASTERISK expression .)
    MINUS           reduce using rule 50 (expression -> expression ASTERISK expression .)
    ASTERISK        reduce using rule 50 (expression -> expression ASTERISK expression .)
    FSLASH          reduce using rule 50 (expression -> expression ASTERISK expression .)
    RPAREN          reduce using rule 50 (expression -> expression ASTERISK expression .)
    COMMA           reduce using rule 50 (expression -> expression ASTERISK expression .)
    EE              reduce using rule 50 (expression -> expression ASTERISK expression .)
    NE              reduce using rule 50 (expression -> expression ASTERISK expression .)
    LT              reduce using rule 50 (expression -> expression ASTERISK expression .)
    GT              reduce using rule 50 (expression -> expression ASTERISK expression .)
    LTE             reduce using rule 50 (expression -> expression ASTERISK expression .)
    GTE             reduce using rule 50 (expression -> expression ASTERISK expression .)
    AMPERSAND       reduce using rule 50 (expression -> expression ASTERISK expression .)
    PIPE            reduce using rule 50 (expression -> expression ASTERISK expression .)

  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! ASTERISK        [ shift and go to state 92 ]
  ! FSLASH          [ shift and go to state 93 ]


state 114

    (51) expression -> expression FSLASH expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    SEMICOLON       reduce using rule 51 (expression -> expression FSLASH expression .)
    PLUS            reduce using rule 51 (expression -> expression FSLASH expression .)
    MINUS           reduce using rule 51 (expression -> expression FSLASH expression .)
    ASTERISK        reduce using rule 51 (expression -> expression FSLASH expression .)
    FSLASH          reduce using rule 51 (expression -> expression FSLASH expression .)
    RPAREN          reduce using rule 51 (expression -> expression FSLASH expression .)
    COMMA           reduce using rule 51 (expression -> expression FSLASH expression .)
    EE              reduce using rule 51 (expression -> expression FSLASH expression .)
    NE              reduce using rule 51 (expression -> expression FSLASH expression .)
    LT              reduce using rule 51 (expression -> expression FSLASH expression .)
    GT              reduce using rule 51 (expression -> expression FSLASH expression .)
    LTE             reduce using rule 51 (expression -> expression FSLASH expression .)
    GTE             reduce using rule 51 (expression -> expression FSLASH expression .)
    AMPERSAND       reduce using rule 51 (expression -> expression FSLASH expression .)
    PIPE            reduce using rule 51 (expression -> expression FSLASH expression .)

  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! ASTERISK        [ shift and go to state 92 ]
  ! FSLASH          [ shift and go to state 93 ]


state 115

    (49) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    ASTERISK        reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    FSLASH          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EE              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LTE             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GTE             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    AMPERSAND       reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    PIPE            reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 116

    (45) assignment -> pointer_var EQUALS expression SEMICOLON .

    RETURN          reduce using rule 45 (assignment -> pointer_var EQUALS expression SEMICOLON .)
    DATA_TYPE       reduce using rule 45 (assignment -> pointer_var EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 45 (assignment -> pointer_var EQUALS expression SEMICOLON .)
    ASTERISK        reduce using rule 45 (assignment -> pointer_var EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 45 (assignment -> pointer_var EQUALS expression SEMICOLON .)
    IF              reduce using rule 45 (assignment -> pointer_var EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 45 (assignment -> pointer_var EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 45 (assignment -> pointer_var EQUALS expression SEMICOLON .)


state 117

    (46) assignment -> IDENTIFIER EQUALS expression SEMICOLON .

    RETURN          reduce using rule 46 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    DATA_TYPE       reduce using rule 46 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 46 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    ASTERISK        reduce using rule 46 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 46 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 46 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 46 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 46 (assignment -> IDENTIFIER EQUALS expression SEMICOLON .)


state 118

    (54) function_call -> IDENTIFIER LPAREN arglist RPAREN .

    SEMICOLON       reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    PLUS            reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    MINUS           reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    ASTERISK        reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    FSLASH          reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    COMMA           reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    EE              reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    NE              reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    LT              reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    GT              reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    LTE             reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    GTE             reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    AMPERSAND       reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)
    PIPE            reduce using rule 54 (function_call -> IDENTIFIER LPAREN arglist RPAREN .)


state 119

    (57) arglist -> arglist COMMA . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 134
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 120

    (68) condition -> LPAREN condition . RPAREN
    (66) condition -> condition . AMPERSAND AMPERSAND condition
    (67) condition -> condition . PIPE PIPE condition

    RPAREN          shift and go to state 135
    AMPERSAND       shift and go to state 123
    PIPE            shift and go to state 124


state 121

    (49) expression -> LPAREN expression . RPAREN
    (60) condition -> expression . EE expression
    (61) condition -> expression . NE expression
    (62) condition -> expression . LT expression
    (63) condition -> expression . GT expression
    (64) condition -> expression . LTE expression
    (65) condition -> expression . GTE expression
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          shift and go to state 115
    EE              shift and go to state 126
    NE              shift and go to state 127
    LT              shift and go to state 128
    GT              shift and go to state 129
    LTE             shift and go to state 130
    GTE             shift and go to state 131
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 122

    (35) while_block -> WHILE LPAREN condition RPAREN . statement_block
    (28) statement_block -> . statement
    (29) statement_block -> . SEMICOLON
    (30) statement_block -> . LBRACE statement_list RBRACE
    (23) statement -> . declaration
    (24) statement -> . assignment
    (25) statement -> . function_call SEMICOLON
    (26) statement -> . while_block
    (27) statement -> . if_else_block
    (36) declaration -> . DATA_TYPE decl_var_list SEMICOLON
    (45) assignment -> . pointer_var EQUALS expression SEMICOLON
    (46) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (35) while_block -> . WHILE LPAREN condition RPAREN statement_block
    (33) if_else_block -> . if_block
    (34) if_else_block -> . if_block else_block
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (31) if_block -> . IF LPAREN condition RPAREN statement_block

    SEMICOLON       shift and go to state 108
    LBRACE          shift and go to state 109
    DATA_TYPE       shift and go to state 60
    IDENTIFIER      shift and go to state 62
    ASTERISK        shift and go to state 63
    WHILE           shift and go to state 64
    IF              shift and go to state 66

    statement_block                shift and go to state 136
    statement                      shift and go to state 107
    declaration                    shift and go to state 55
    assignment                     shift and go to state 56
    function_call                  shift and go to state 57
    while_block                    shift and go to state 58
    if_else_block                  shift and go to state 59
    pointer_var                    shift and go to state 61
    if_block                       shift and go to state 65

state 123

    (66) condition -> condition AMPERSAND . AMPERSAND condition

    AMPERSAND       shift and go to state 137


state 124

    (67) condition -> condition PIPE . PIPE condition

    PIPE            shift and go to state 138


state 125

    (59) condition -> NOT condition .
    (66) condition -> condition . AMPERSAND AMPERSAND condition
    (67) condition -> condition . PIPE PIPE condition

  ! shift/reduce conflict for AMPERSAND resolved as shift
  ! shift/reduce conflict for PIPE resolved as shift
    RPAREN          reduce using rule 59 (condition -> NOT condition .)
    AMPERSAND       shift and go to state 123
    PIPE            shift and go to state 124

  ! AMPERSAND       [ reduce using rule 59 (condition -> NOT condition .) ]
  ! PIPE            [ reduce using rule 59 (condition -> NOT condition .) ]


state 126

    (60) condition -> expression EE . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 139
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 127

    (61) condition -> expression NE . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 140
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 128

    (62) condition -> expression LT . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 141
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 129

    (63) condition -> expression GT . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 142
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 130

    (64) condition -> expression LTE . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 143
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 131

    (65) condition -> expression GTE . expression
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    LPAREN          shift and go to state 71
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    expression                     shift and go to state 144
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 132

    (30) statement_block -> LBRACE statement_list . RBRACE
    (21) statement_list -> statement_list . statement
    (23) statement -> . declaration
    (24) statement -> . assignment
    (25) statement -> . function_call SEMICOLON
    (26) statement -> . while_block
    (27) statement -> . if_else_block
    (36) declaration -> . DATA_TYPE decl_var_list SEMICOLON
    (45) assignment -> . pointer_var EQUALS expression SEMICOLON
    (46) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (35) while_block -> . WHILE LPAREN condition RPAREN statement_block
    (33) if_else_block -> . if_block
    (34) if_else_block -> . if_block else_block
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (31) if_block -> . IF LPAREN condition RPAREN statement_block

    RBRACE          shift and go to state 145
    DATA_TYPE       shift and go to state 60
    IDENTIFIER      shift and go to state 62
    ASTERISK        shift and go to state 63
    WHILE           shift and go to state 64
    IF              shift and go to state 66

    statement                      shift and go to state 52
    declaration                    shift and go to state 55
    assignment                     shift and go to state 56
    function_call                  shift and go to state 57
    while_block                    shift and go to state 58
    if_else_block                  shift and go to state 59
    pointer_var                    shift and go to state 61
    if_block                       shift and go to state 65

state 133

    (31) if_block -> IF LPAREN condition RPAREN . statement_block
    (28) statement_block -> . statement
    (29) statement_block -> . SEMICOLON
    (30) statement_block -> . LBRACE statement_list RBRACE
    (23) statement -> . declaration
    (24) statement -> . assignment
    (25) statement -> . function_call SEMICOLON
    (26) statement -> . while_block
    (27) statement -> . if_else_block
    (36) declaration -> . DATA_TYPE decl_var_list SEMICOLON
    (45) assignment -> . pointer_var EQUALS expression SEMICOLON
    (46) assignment -> . IDENTIFIER EQUALS expression SEMICOLON
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (35) while_block -> . WHILE LPAREN condition RPAREN statement_block
    (33) if_else_block -> . if_block
    (34) if_else_block -> . if_block else_block
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (31) if_block -> . IF LPAREN condition RPAREN statement_block

    SEMICOLON       shift and go to state 108
    LBRACE          shift and go to state 109
    DATA_TYPE       shift and go to state 60
    IDENTIFIER      shift and go to state 62
    ASTERISK        shift and go to state 63
    WHILE           shift and go to state 64
    IF              shift and go to state 66

    statement_block                shift and go to state 146
    statement                      shift and go to state 107
    declaration                    shift and go to state 55
    assignment                     shift and go to state 56
    function_call                  shift and go to state 57
    while_block                    shift and go to state 58
    if_else_block                  shift and go to state 59
    pointer_var                    shift and go to state 61
    if_block                       shift and go to state 65

state 134

    (57) arglist -> arglist COMMA expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          reduce using rule 57 (arglist -> arglist COMMA expression .)
    COMMA           reduce using rule 57 (arglist -> arglist COMMA expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 135

    (68) condition -> LPAREN condition RPAREN .

    RPAREN          reduce using rule 68 (condition -> LPAREN condition RPAREN .)
    AMPERSAND       reduce using rule 68 (condition -> LPAREN condition RPAREN .)
    PIPE            reduce using rule 68 (condition -> LPAREN condition RPAREN .)


state 136

    (35) while_block -> WHILE LPAREN condition RPAREN statement_block .

    RETURN          reduce using rule 35 (while_block -> WHILE LPAREN condition RPAREN statement_block .)
    DATA_TYPE       reduce using rule 35 (while_block -> WHILE LPAREN condition RPAREN statement_block .)
    IDENTIFIER      reduce using rule 35 (while_block -> WHILE LPAREN condition RPAREN statement_block .)
    ASTERISK        reduce using rule 35 (while_block -> WHILE LPAREN condition RPAREN statement_block .)
    WHILE           reduce using rule 35 (while_block -> WHILE LPAREN condition RPAREN statement_block .)
    IF              reduce using rule 35 (while_block -> WHILE LPAREN condition RPAREN statement_block .)
    RBRACE          reduce using rule 35 (while_block -> WHILE LPAREN condition RPAREN statement_block .)
    ELSE            reduce using rule 35 (while_block -> WHILE LPAREN condition RPAREN statement_block .)


state 137

    (66) condition -> condition AMPERSAND AMPERSAND . condition
    (59) condition -> . NOT condition
    (60) condition -> . expression EE expression
    (61) condition -> . expression NE expression
    (62) condition -> . expression LT expression
    (63) condition -> . expression GT expression
    (64) condition -> . expression LTE expression
    (65) condition -> . expression GTE expression
    (66) condition -> . condition AMPERSAND AMPERSAND condition
    (67) condition -> . condition PIPE PIPE condition
    (68) condition -> . LPAREN condition RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    NOT             shift and go to state 104
    LPAREN          shift and go to state 102
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    condition                      shift and go to state 147
    expression                     shift and go to state 105
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 138

    (67) condition -> condition PIPE PIPE . condition
    (59) condition -> . NOT condition
    (60) condition -> . expression EE expression
    (61) condition -> . expression NE expression
    (62) condition -> . expression LT expression
    (63) condition -> . expression GT expression
    (64) condition -> . expression LTE expression
    (65) condition -> . expression GTE expression
    (66) condition -> . condition AMPERSAND AMPERSAND condition
    (67) condition -> . condition PIPE PIPE condition
    (68) condition -> . LPAREN condition RPAREN
    (47) expression -> . expression PLUS expression
    (48) expression -> . expression MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . expression ASTERISK expression
    (51) expression -> . expression FSLASH expression
    (52) expression -> . MINUS expression
    (53) expression -> . function_call
    (69) expression -> . CONSTANT
    (70) expression -> . pointer_var
    (71) expression -> . scalar_var
    (54) function_call -> . IDENTIFIER LPAREN arglist RPAREN
    (55) function_call -> . IDENTIFIER LPAREN RPAREN
    (56) function_call -> . ASTERISK function_call
    (41) pointer_var -> . ASTERISK pointer_var
    (42) pointer_var -> . ASTERISK scalar_var
    (43) scalar_var -> . IDENTIFIER
    (44) scalar_var -> . AMPERSAND IDENTIFIER

    NOT             shift and go to state 104
    LPAREN          shift and go to state 102
    MINUS           shift and go to state 70
    CONSTANT        shift and go to state 73
    IDENTIFIER      shift and go to state 76
    ASTERISK        shift and go to state 63
    AMPERSAND       shift and go to state 77

    condition                      shift and go to state 148
    expression                     shift and go to state 105
    function_call                  shift and go to state 72
    pointer_var                    shift and go to state 74
    scalar_var                     shift and go to state 75

state 139

    (60) condition -> expression EE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          reduce using rule 60 (condition -> expression EE expression .)
    AMPERSAND       reduce using rule 60 (condition -> expression EE expression .)
    PIPE            reduce using rule 60 (condition -> expression EE expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 140

    (61) condition -> expression NE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          reduce using rule 61 (condition -> expression NE expression .)
    AMPERSAND       reduce using rule 61 (condition -> expression NE expression .)
    PIPE            reduce using rule 61 (condition -> expression NE expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 141

    (62) condition -> expression LT expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          reduce using rule 62 (condition -> expression LT expression .)
    AMPERSAND       reduce using rule 62 (condition -> expression LT expression .)
    PIPE            reduce using rule 62 (condition -> expression LT expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 142

    (63) condition -> expression GT expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          reduce using rule 63 (condition -> expression GT expression .)
    AMPERSAND       reduce using rule 63 (condition -> expression GT expression .)
    PIPE            reduce using rule 63 (condition -> expression GT expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 143

    (64) condition -> expression LTE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          reduce using rule 64 (condition -> expression LTE expression .)
    AMPERSAND       reduce using rule 64 (condition -> expression LTE expression .)
    PIPE            reduce using rule 64 (condition -> expression LTE expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 144

    (65) condition -> expression GTE expression .
    (47) expression -> expression . PLUS expression
    (48) expression -> expression . MINUS expression
    (50) expression -> expression . ASTERISK expression
    (51) expression -> expression . FSLASH expression

    RPAREN          reduce using rule 65 (condition -> expression GTE expression .)
    AMPERSAND       reduce using rule 65 (condition -> expression GTE expression .)
    PIPE            reduce using rule 65 (condition -> expression GTE expression .)
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    ASTERISK        shift and go to state 92
    FSLASH          shift and go to state 93


state 145

    (30) statement_block -> LBRACE statement_list RBRACE .

    RETURN          reduce using rule 30 (statement_block -> LBRACE statement_list RBRACE .)
    DATA_TYPE       reduce using rule 30 (statement_block -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 30 (statement_block -> LBRACE statement_list RBRACE .)
    ASTERISK        reduce using rule 30 (statement_block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 30 (statement_block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 30 (statement_block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 30 (statement_block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 30 (statement_block -> LBRACE statement_list RBRACE .)


state 146

    (31) if_block -> IF LPAREN condition RPAREN statement_block .

    ELSE            reduce using rule 31 (if_block -> IF LPAREN condition RPAREN statement_block .)
    RETURN          reduce using rule 31 (if_block -> IF LPAREN condition RPAREN statement_block .)
    DATA_TYPE       reduce using rule 31 (if_block -> IF LPAREN condition RPAREN statement_block .)
    IDENTIFIER      reduce using rule 31 (if_block -> IF LPAREN condition RPAREN statement_block .)
    ASTERISK        reduce using rule 31 (if_block -> IF LPAREN condition RPAREN statement_block .)
    WHILE           reduce using rule 31 (if_block -> IF LPAREN condition RPAREN statement_block .)
    IF              reduce using rule 31 (if_block -> IF LPAREN condition RPAREN statement_block .)
    RBRACE          reduce using rule 31 (if_block -> IF LPAREN condition RPAREN statement_block .)


state 147

    (66) condition -> condition AMPERSAND AMPERSAND condition .
    (66) condition -> condition . AMPERSAND AMPERSAND condition
    (67) condition -> condition . PIPE PIPE condition

    RPAREN          reduce using rule 66 (condition -> condition AMPERSAND AMPERSAND condition .)
    AMPERSAND       reduce using rule 66 (condition -> condition AMPERSAND AMPERSAND condition .)
    PIPE            reduce using rule 66 (condition -> condition AMPERSAND AMPERSAND condition .)

  ! AMPERSAND       [ shift and go to state 123 ]
  ! PIPE            [ shift and go to state 124 ]


state 148

    (67) condition -> condition PIPE PIPE condition .
    (66) condition -> condition . AMPERSAND AMPERSAND condition
    (67) condition -> condition . PIPE PIPE condition

    RPAREN          reduce using rule 67 (condition -> condition PIPE PIPE condition .)
    AMPERSAND       reduce using rule 67 (condition -> condition PIPE PIPE condition .)
    PIPE            reduce using rule 67 (condition -> condition PIPE PIPE condition .)

  ! AMPERSAND       [ shift and go to state 123 ]
  ! PIPE            [ shift and go to state 124 ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AMPERSAND in state 125 resolved as shift
WARNING: shift/reduce conflict for PIPE in state 125 resolved as shift
